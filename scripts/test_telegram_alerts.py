#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram-–∞–ª–µ—Ä—Ç–æ–≤
"""

import os
import sys
import django
import requests
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'panel.settings')
django.setup()

from core.utils import send_telegram_alert, send_error_alert, send_business_alert

def test_simple_message():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    message = f"üß™ <b>–¢–ï–°–¢–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï</b>\n\n"
    message += f"üìÑ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
    message += f"‚è∞ <b>–í—Ä–µ–º—è:</b> {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
    message += f"üîß <b>–¢–∏–ø:</b> –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    
    success = send_telegram_alert(message)
    
    if success:
        print("‚úÖ –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    return success

def test_error_alert():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∞–ª–µ—Ä—Ç–∞ –æ–± –æ—à–∏–±–∫–µ"""
    print("\nüö® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–µ—Ä—Ç–∞ –æ–± –æ—à–∏–±–∫–µ...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ—à–∏–±–∫—É
    error = Exception("–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–ª–µ—Ä—Ç–æ–≤")
    
    success = send_error_alert(
        error=error,
        request_path="/api/test/endpoint",
        user_info="test_user (admin)",
        additional_info={
            'test': True,
            'method': 'POST',
            'ip_address': '127.0.0.1',
            'user_agent': 'TestScript/1.0'
        }
    )
    
    if success:
        print("‚úÖ –ê–ª–µ—Ä—Ç –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ –æ–± –æ—à–∏–±–∫–µ")
    
    return success

def test_business_alert():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –±–∏–∑–Ω–µ—Å-—Å–æ–±—ã—Ç–∏—è"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-—Å–æ–±—ã—Ç–∏—è...")
    
    success = send_business_alert(
        event_type='new_zayavka',
        description='–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #12345',
        user_info='test_user (admin)',
        additional_data={
            'zayavka_id': 12345,
            'gorod': '–ú–æ—Å–∫–≤–∞',
            'tip_zayavki': '–†–µ–º–æ–Ω—Ç',
            'client_phone': '+7 (999) 123-45-67',
            'test': True
        }
    )
    
    if success:
        print("‚úÖ –ë–∏–∑–Ω–µ—Å-—Å–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∏–∑–Ω–µ—Å-—Å–æ–±—ã—Ç–∏—è")
    
    return success

def test_api_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint...")
    
    # URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000)
    base_url = "http://localhost:8000/api/v1"
    
    # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω (–ª–æ–≥–∏–Ω)
    login_data = {
        "login": "admin",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω
        "password": "admin"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    }
    
    try:
        # –õ–æ–≥–∏–Ω
        login_response = requests.post(f"{base_url}/login/", json=login_data)
        
        if login_response.status_code == 200:
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω")
            
            # –ü–æ–ª—É—á–∞–µ–º cookies
            cookies = login_response.cookies
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤
            test_data = {
                "type": "info",
                "message": "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API",
                "timestamp": datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            }
            
            alert_response = requests.post(
                f"{base_url}/test-telegram-alert/",
                json=test_data,
                cookies=cookies
            )
            
            if alert_response.status_code == 200:
                result = alert_response.json()
                print(f"‚úÖ API —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω: {result.get('message', '')}")
                return True
            else:
                print(f"‚ùå API —Ç–µ—Å—Ç –Ω–µ—É–¥–∞—á–µ–Ω: {alert_response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {alert_response.text}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {login_response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram-–∞–ª–µ—Ä—Ç–æ–≤")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    from django.conf import settings
    
    print(f"üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   - TELEGRAM_ALERTS_ENABLED: {getattr(settings, 'TELEGRAM_ALERTS_ENABLED', False)}")
    print(f"   - TELEGRAM_BOT_TOKEN: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if getattr(settings, 'TELEGRAM_BOT_TOKEN', None) else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    print(f"   - TELEGRAM_CHAT_ID: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if getattr(settings, 'TELEGRAM_CHAT_ID', None) else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    print()
    
    if not getattr(settings, 'TELEGRAM_ALERTS_ENABLED', False):
        print("‚ö†Ô∏è  Telegram –∞–ª–µ—Ä—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        return
    
    if not getattr(settings, 'TELEGRAM_BOT_TOKEN', None) or not getattr(settings, 'TELEGRAM_CHAT_ID', None):
        print("‚ö†Ô∏è  –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    results = []
    
    results.append(test_simple_message())
    results.append(test_error_alert())
    results.append(test_business_alert())
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint (–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω)
    print("\n" + "=" * 50)
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints (—Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä)")
    results.append(test_api_endpoint())
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    
    successful_tests = sum(results)
    total_tests = len(results)
    
    print(f"   - –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {total_tests}")
    print(f"   - –£—Å–ø–µ—à–Ω—ã—Ö: {successful_tests}")
    print(f"   - –ù–µ—É–¥–∞—á–Ω—ã—Ö: {total_tests - successful_tests}")
    
    if successful_tests == total_tests:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ª–æ–≥–∏.")

if __name__ == "__main__":
    main() 