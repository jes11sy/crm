#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —ç–º–æ–¥–∑–∏ –Ω–∞ Windows
"""

import os
import sys
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Django –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'panel.settings')

import django
django.setup()

from core.utils import send_business_alert, send_error_alert
from core.logging_handlers import setup_windows_logging

def test_logging():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —ç–º–æ–¥–∑–∏...")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Windows-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    is_windows = setup_windows_logging()
    print(f"üåê –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {'Windows' if is_windows else 'Unix/Linux'}")
    
    # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä
    logger = logging.getLogger(__name__)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —ç–º–æ–¥–∑–∏
    test_messages = [
        "üîê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É",
        "‚è∞ –í—Ä–µ–º—è: 2025-07-06 20:31:48",
        "üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
        "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Test User",
        "üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞!",
        "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã",
        "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ",
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –Ω–µ—É–¥–∞—á–µ–π",
        "üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: 1000 ‚ÇΩ",
        "üìù –ó–∞–º–µ—Ç–∫–∞: –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        "üîó –°—Å—ã–ª–∫–∞: https://example.com",
        "üìã –î–µ—Ç–∞–ª–∏: –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: –û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è",
        "üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ: –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
    ]
    
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–∞–π–ª...")
    for i, message in enumerate(test_messages, 1):
        logger.info(f"–¢–µ—Å—Ç {i}: {message}")
        print(f"  ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–æ: {message}")
    
    print("\nüîî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∏–∑–Ω–µ—Å-–∞–ª–µ—Ä—Ç
        success = send_business_alert(
            event_type="test",
            description="–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏ üîê‚è∞üìÑüë§",
            user_info="Test User",
            additional_data={"test": "data"}
        )
        print(f"  {'‚úÖ' if success else '‚ùå'} –ë–∏–∑–Ω–µ—Å-–∞–ª–µ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª–µ—Ä—Ç –æ–± –æ—à–∏–±–∫–µ
        test_error = Exception("–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ —Å —ç–º–æ–¥–∑–∏ üö®‚ö†Ô∏è‚ùå")
        success = send_error_alert(
            error=test_error,
            request_path="/test/",
            user_info="Test User",
            additional_info={"test": "error"}
        )
        print(f"  {'‚úÖ' if success else '‚ùå'} –ê–ª–µ—Ä—Ç –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram: {e}")
    
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤...")
    log_files = [
        "logs/django.log",
        "logs/alerts.log"
    ]
    
    for log_file in log_files:
        if os.path.exists(log_file):
            print(f"  ‚úÖ –§–∞–π–ª {log_file} —Å–æ–∑–¥–∞–Ω")
            try:
                with open(log_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                    print(f"  üìÑ –†–∞–∑–º–µ—Ä: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    if 'üîê' in content or '[LOGIN]' in content:
                        print(f"  ‚úÖ –≠–º–æ–¥–∑–∏ –∏–ª–∏ –∏—Ö –∑–∞–º–µ–Ω—ã –Ω–∞–π–¥–µ–Ω—ã –≤ –ª–æ–≥–µ")
                    else:
                        print(f"  ‚ö†Ô∏è –≠–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ª–æ–≥–µ")
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        else:
            print(f"  ‚ùå –§–∞–π–ª {log_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_logging() 