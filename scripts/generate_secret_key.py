#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ Django SECRET_KEY
"""

import secrets
import string
import sys

def generate_secret_key(length=50):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π SECRET_KEY –¥–ª—è Django"""
    alphabet = string.ascii_letters + string.digits + string.punctuation
    # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ .env —Ñ–∞–π–ª–∞—Ö
    alphabet = alphabet.replace('"', '').replace("'", '').replace('\\', '')
    
    secret_key = ''.join(secrets.choice(alphabet) for _ in range(length))
    return secret_key

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ Django SECRET_KEY")
    print("=" * 50)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á
    secret_key = generate_secret_key()
    
    print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π SECRET_KEY:")
    print(f"SECRET_KEY={secret_key}")
    print()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    try:
        with open('.env.local', 'w') as f:
            f.write(f"SECRET_KEY={secret_key}\n")
        print("‚úÖ SECRET_KEY —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª .env.local")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª: {e}")
    
    print()
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ SECRET_KEY –≤—ã—à–µ")
    print("2. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞")
    print("3. –ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª .env –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    print("4. –ù–ò–ö–û–ì–î–ê –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ SECRET_KEY –≤ git!")
    
    return 0

if __name__ == "__main__":
    sys.exit(main()) 